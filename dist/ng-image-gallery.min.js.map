{"version":3,"sources":["ng-image-gallery.min.js"],"names":["keys","enter","esc","left","right","angular","module","provider","defOpts","thumbnails","inline","bubbles","imgBubbles","bgClose","imgAnim","setOpts","newOpts","extend","$get","directive","$rootScope","$timeout","$q","ngImageGalleryOpts","PubSub","replace","transclude","restrict","scope","images","methods","conf","onOpen","onClose","template","link","elem","attr","showLoader","imgLoading","hideLoader","loadImg","imgObj","reject","deferred","defer","hasOwnProperty","img","Image","src","url","onload","cached","resolve","promise","setActiveImg","indexOf","activeImg","length","imgMoveDirection","then","undefined","$watchCollection","noop","imagesFirstWatch","$watch","activeImageIndex","activeImageIndexFirstWatch","newImgIndex","open","imgIndex","opened","element","document","body","addClass","close","removeClass","next","$emit","name","index","prev","subscribe","data","direction","backgroundClose","e","noCloseClasses","i","target","classList","bind","event","which","window","Hammer","hammerElem","on","ev","removeClassFromDocumentBody","$on"],"mappings":"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","file":"ng-image-gallery.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    // Key codes\n    var keys = {\n        enter: 13,\n        esc: 27,\n        left: 37,\n        right: 39\n    };\n\n    angular\n        .module('thatisuday.ng-image-gallery', ['ngAnimate'])\n        .provider('ngImageGalleryOpts', function () {\n            var defOpts = {\n                thumbnails: true,\n                inline: false,\n                bubbles: true,\n                imgBubbles: false,\n                bgClose: false,\n                imgAnim: 'fadeup',\n            };\n\n            return {\n                setOpts: function (newOpts) {\n                    angular.extend(defOpts, newOpts);\n                },\n                $get: function () {\n                    return defOpts;\n                }\n            }\n        })\n        .directive('ngImageGallery', ['$rootScope', '$timeout', '$q', 'ngImageGalleryOpts','PubSub',\n            function ($rootScope, $timeout, $q, ngImageGalleryOpts,PubSub) {\n                return {\n                    replace: true,\n                    transclude: false,\n                    restrict: 'AE',\n                    scope: {\n                        images: '=',\t\t// []\n                        methods: '=?',\t\t// {}\n                        conf: '=?',\t\t// {}\n                        thumbnails: '=?',\t\t// true|false\n                        inline: '=?',\t\t// true|flase\n                        bubbles: '=?',\t\t// true|flase\n                        imgBubbles: '=?',\t\t// true|flase\n                        bgClose: '=?',\t\t// true|flase\n                        imgAnim: '@?',\t\t// {name}\n                        onOpen: '&?',\t\t// function\n                        onClose: '&?'\t\t// function\n                    },\n                    template: '<div class=\"ng-image-gallery img-move-dir-{{imgMoveDirection}}\" ng-class=\"{inline:inline}\">' +\n\n                    // Thumbnails container\n                    //  Hide for inline gallery\n                    '<div ng-if=\"thumbnails && !inline\" class=\"ng-image-gallery-thumbnails\">' +\n                    '<div class=\"thumb\" ng-repeat=\"image in images\" ng-click=\"methods.open($index);\" ng-style=\"{ \\'background-image\\': \\'url(\\' + (image.thumbUrl || image.url) + \\')\\' }\"  ng-attr-title=\"{{image.title || undefined}}\"></div>' +\n                    '</div>' +\n\n                    // Modal container\n                    // (inline container for inline modal)\n                    '<div class=\"ng-image-gallery-modal\" ng-show=\"opened\" ng-cloak>' +\n\n                    // Gallery backdrop container\n                    // (hide for inline gallery)\n                    '<div class=\"ng-image-gallery-backdrop\" ng-if=\"!inline\"></div>' +\n\n                    // Gallery contents container\n                    // (hide when image is loading)\n                    '<div class=\"ng-image-gallery-content\" ng-show=\"!imgLoading\" ng-click=\"backgroundClose($event);\">' +\n\n                    // destroy icons container\n                    '<div class=\"destroy-icons-container\">' +\n                    // External link icon\n                    '<a class=\"ext-url\" ng-repeat=\"image in images\" ng-if=\"activeImg == image && image.extUrl\" href=\"{{image.extUrl}}\"></a>' +\n\n                    // Close Icon (hidden in inline gallery)\n                    '<div class=\"close\" ng-click=\"methods.close();\" ng-if=\"!inline\"></div>' +\n                    '</div>' +\n\n                    // Prev-Next Icons\n                    // Add `bubbles-on` class when bubbles are enabled (for offset)\n                    '<div class=\"prev\" ng-click=\"methods.prev();\" ng-class=\"{\\'bubbles-on\\':bubbles}\" ng-hide=\"images.length == 1\"></div>' +\n                    '<div class=\"next\" ng-click=\"methods.next();\" ng-class=\"{\\'bubbles-on\\':bubbles}\" ng-hide=\"images.length == 1\"></div>' +\n\n                    // Galleria container\n                    '<div class=\"galleria\">' +\n\n                    // Images container\n                    '<div class=\"galleria-images img-anim-{{imgAnim}} img-move-dir-{{imgMoveDirection}}\">' +\n                    '<img class=\"galleria-image\" ng-repeat=\"image in images\" ng-if=\"activeImg == image\" ng-src=\"{{image.url}}\" ondragstart=\"return false;\" oncontextmenu=\"return false;\" ng-attr-title=\"{{image.title || undefined}}\" ng-attr-alt=\"{{image.alt || undefined}}\"/>' +\n                    '</div>' +\n\n                    // Bubble navigation container\n                    '<div class=\"galleria-bubbles\" ng-if=\"bubbles && !imgBubbles\"  ng-hide=\"images.length == 1\">' +\n                    '<span class=\"galleria-bubble\" ng-click=\"setActiveImg(image);\" ng-repeat=\"image in images\" ng-class=\"{active : (activeImg == image)}\"></span>' +\n                    '</div>' +\n\n                    // Image bubble navigation container\n                    '<div class=\"galleria-bubbles\" ng-if=\"bubbles && imgBubbles\" ng-hide=\"images.length == 1\">' +\n                    '<span class=\"galleria-bubble img-bubble\" ng-click=\"setActiveImg(image);\" ng-repeat=\"image in images\" ng-class=\"{active : (activeImg == image)}\" ng-style=\"{ \\'background-image\\': \\'url(\\' + (image.bubbleUrl || image.thumbUrl || image.url) +\\')\\' }\"></span>' +\n                    '</div>' +\n\n                    '</div>' +\n\n                    '</div>' +\n\n                    // Loading animation overlay container\n                    // (show when image is loading)\n                    '<div class=\"ng-image-gallery-loader\" ng-show=\"imgLoading\">' +\n                    '<div class=\"spinner\">' +\n                    '<div class=\"rect1\"></div>' +\n                    '<div class=\"rect2\"></div>' +\n                    '<div class=\"rect3\"></div>' +\n                    '<div class=\"rect4\"></div>' +\n                    '<div class=\"rect5\"></div>' +\n                    '</div>' +\n                    '</div>' +\n                    '</div>' +\n                    '</div>',\n\n                    link: function (scope, elem, attr) {\n\n                        /*\n                         *\tOperational functions\n                        **/\n\n                        // Show gallery loader\n                        scope.showLoader = function () {\n                            scope.imgLoading = true;\n                        }\n\n                        // Hide gallery loader\n                        scope.hideLoader = function () {\n                            scope.imgLoading = false;\n                        }\n\n                        // Image load complete promise\n                        scope.loadImg = function (imgObj) {\n\n                            // Return rejected promise\n                            // if not image object received\n                            if (!imgObj) return $q.reject();\n\n                            var deferred = $q.defer();\n\n                            // Show loder\n                            if (!imgObj.hasOwnProperty('cached')) scope.showLoader();\n\n                            // Process image\n                            var img = new Image();\n                            img.src = imgObj.url;\n                            img.onload = function () {\n                                // Hide loder\n                                if (!imgObj.hasOwnProperty('cached')) scope.hideLoader();\n\n                                // Cache image\n                                if (!imgObj.hasOwnProperty('cached')) imgObj.cached = true;\n\n                                return deferred.resolve(imgObj);\n                            }\n\n                            return deferred.promise;\n                        }\n\n                        scope.setActiveImg = function (imgObj) {\n                            // Get images move direction\n                            if (\n                                scope.images.indexOf(scope.activeImg) - scope.images.indexOf(imgObj) == (scope.images.length - 1) ||\n                                (\n                                    scope.images.indexOf(scope.activeImg) - scope.images.indexOf(imgObj) <= 0 &&\n                                    scope.images.indexOf(scope.activeImg) - scope.images.indexOf(imgObj) != -(scope.images.length - 1)\n                                )\n\n                            ) {\n                                scope.imgMoveDirection = 'forward';\n                            }\n                            else {\n                                scope.imgMoveDirection = 'backward';\n                            }\n\n                            // Load image\n                            scope.loadImg(imgObj).then(function (imgObj) {\n                                scope.activeImg = imgObj;\n                            });\n                        }\n\n\n                        /***************************************************/\n\n\n                        /*\n                         *\tGallery settings\n                        **/\n\n                        // Modify scope models\n                        scope.images = (scope.images != undefined) ? scope.images : [];\n                        scope.methods = (scope.methods != undefined) ? scope.methods : {};\n                        scope.conf = (scope.conf != undefined) ? scope.conf : {};\n\n                        // setting options\n                        scope.$watchCollection('conf', function (conf) {\n                            scope.thumbnails = (conf.thumbnails != undefined) ? conf.thumbnails : (scope.thumbnails != undefined) ? scope.thumbnails : ngImageGalleryOpts.thumbnails;\n                            scope.inline = (conf.inline != undefined) ? conf.inline : (scope.inline != undefined) ? scope.inline : ngImageGalleryOpts.inline;\n                            scope.bubbles = (conf.bubbles != undefined) ? conf.bubbles : (scope.bubbles != undefined) ? scope.bubbles : ngImageGalleryOpts.bubbles;\n                            scope.imgBubbles = (conf.imgBubbles != undefined) ? conf.imgBubbles : (scope.imgBubbles != undefined) ? scope.imgBubbles : ngImageGalleryOpts.imgBubbles;\n                            scope.bgClose = (conf.bgClose != undefined) ? conf.bgClose : (scope.bgClose != undefined) ? scope.bgClose : ngImageGalleryOpts.bgClose;\n                            scope.imgAnim = (conf.imgAnim != undefined) ? conf.imgAnim : (scope.imgAnim != undefined) ? scope.imgAnim : ngImageGalleryOpts.imgAnim;\n                        });\n\n                        scope.onOpen = (scope.onOpen != undefined) ? scope.onOpen : angular.noop;\n                        scope.onClose = (scope.onClose != undefined) ? scope.onClose : angular.noop;\n\n                        // If images populate dynamically, reset gallery\n                        var imagesFirstWatch = true;\n                        scope.$watch('images', function () {\n                            if (imagesFirstWatch) {\n                                imagesFirstWatch = false;\n                            }\n                            else if (scope.images.length) scope.setActiveImg(\n                                scope.images[scope.activeImageIndex || 0]\n                            );\n                        });\n\n                        // Watch index of visible/active image\n                        // If index changes, make sure to load/change image\n                        var activeImageIndexFirstWatch = true;\n                        scope.$watch('activeImageIndex', function (newImgIndex) {\n                            if (activeImageIndexFirstWatch) {\n                                activeImageIndexFirstWatch = false;\n                            }\n                            else if (scope.images.length) {\n                                scope.setActiveImg(\n                                    scope.images[newImgIndex]\n                                );\n                            }\n                        });\n\n                        // Open modal automatically if inline\n                        scope.$watch('inline', function () {\n                            $timeout(function () {\n                                if (scope.inline) scope.methods.open();\n                            });\n                        });\n\n\n                        /***************************************************/\n\n\n                        /*\n                         *\tMethods\n                        **/\n\n                        // Open gallery modal\n                        scope.methods.open = function (imgIndex) {\n                            // Open modal from an index if one passed\n                            scope.activeImageIndex = (imgIndex) ? imgIndex : 0;\n\n                            scope.opened = true;\n\n                            // set overflow hidden to body\n                            if (!scope.inline) angular.element(document.body).addClass('body-overflow-hidden');\n\n                            // call open event after transition\n                            $timeout(function () {\n                                scope.onOpen();\n                            }, 300);\n                        }\n\n                        // Close gallery modal\n                        scope.methods.close = function () {\n                            scope.opened = false; // Model closed\n\n                            // set overflow hidden to body\n                            angular.element(document.body).removeClass('body-overflow-hidden');\n\n                            // call close event after transition\n                            $timeout(function () {\n                                scope.onClose();\n                                scope.activeImageIndex = 0; // Reset index\n                            }, 300);\n                        }\n\n                        // Change image to next\n                        scope.methods.next = function () {\n                            if (scope.activeImageIndex == (scope.images.length - 1)) {\n                                scope.activeImageIndex = 0;\n                            }\n                            else {\n                                scope.activeImageIndex = scope.activeImageIndex + 1;\n                            }\n\n                            scope.$emit(\"onMoveImage\", { name: 'next', index: scope.activeImageIndex });\n                        }\n\n\n                        // Change image to prev\n                        scope.methods.prev = function () {\n                            if (scope.activeImageIndex == 0) {\n                                scope.activeImageIndex = scope.images.length - 1;\n                            }\n                            else {\n                                scope.activeImageIndex--;\n                            }\n                            scope.$emit(\"onMoveImage\", { name: 'prev', index: scope.activeImageIndex });\n\n                        }\n\n                        PubSub.subscribe(\"moveToNextImageByDirection\", function (data) {\n                            if (data.direction === \"next\") {\n                                scope.methods.next();\n                                \n                            }else if(data.direction === \"prev\"){\n                                scope.methods.prev();\n                            }\n                        });\n\n                        // Close gallery on background click\n                        scope.backgroundClose = function (e) {\n                            if (!scope.bgClose || scope.inline) return;\n\n                            var noCloseClasses = [\n                                'galleria-image',\n                                'destroy-icons-container',\n                                'ext-url',\n                                'close',\n                                'next',\n                                'prev',\n                                'galleria-bubble'\n                            ];\n\n                            // check if clicked element has a class that\n                            // belongs to `noCloseClasses`\n                            for (var i = 0; i < e.target.classList.length; i++) {\n                                if (noCloseClasses.indexOf(e.target.classList[i]) != -1) {\n                                    break;\n                                }\n                                else {\n                                    scope.methods.close();\n                                }\n                            }\n                        }\n\n\n                        /***************************************************/\n\n\n                        /*\n                         *\tUser interactions\n                        **/\n\n                        // Key events\n                        angular.element(document).bind('keyup', function (event) {\n                            // If inline modal, do not interact\n                            if (scope.inline) return;\n\n                            if (event.which == keys.right || event.which == keys.enter) {\n                                $timeout(function () {\n                                    scope.methods.next();\n                                });\n                            }\n                            else if (event.which == keys.left) {\n                                $timeout(function () {\n                                    scope.methods.prev();\n                                });\n                            }\n                            else if (event.which == keys.esc) {\n                                $timeout(function () {\n                                    scope.methods.close();\n                                });\n                            }\n                        });\n\n                        // Swipe events\n                        if (window.Hammer) {\n                            var hammerElem = new Hammer(elem[0]);\n                            hammerElem.on('swiperight', function (ev) {\n                                $timeout(function () {\n                                    scope.methods.prev();\n                                });\n                            });\n                            hammerElem.on('swipeleft', function (ev) {\n                                $timeout(function () {\n                                    scope.methods.next();\n                                });\n                            });\n                            hammerElem.on('doubletap', function (ev) {\n                                if (scope.inline) return;\n\n                                $timeout(function () {\n                                    scope.methods.close();\n                                });\n                            });\n                        };\n\n\n                        /***********************************************************/\n\n\n                        /*\n                         *\tActions on angular events\n                        **/\n\n                        var removeClassFromDocumentBody = function () {\n                            angular.element(document.body).removeClass('body-overflow-hidden');\n                        };\n\n                        $rootScope.$on('$stateChangeSuccess', removeClassFromDocumentBody);\n                        $rootScope.$on('$routeChangeSuccess ', removeClassFromDocumentBody);\n\n                    }\n                }\n            }]);\n})();"]}